CREATE TABLE USER (
	USER_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
	USER_ID VARCHAR(50),
    USER_ROLE VARCHAR(10),
    USER_QUAL VARCHAR(2),
    USER_NAME VARCHAR(10),
    USER_PW VARCHAR(50),
    USER_LEVEL INT(10),
    USER_PHONE INT(11),
    USER_BIRTH VARCHAR(8),
    USER_GENDER VARCHAR(1),
    USER_EMAIL VARCHAR(200),
    USER_ADDRESS VARCHAR(500),
    USER_REGDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    USER_MODIDATE DATE,
    USER_EMAIL_CHECK VARCHAR(2),
    USER_SNS_CHECK VARCHAR(2),
    USER_DEL_CHECK VARCHAR(2)
);

CREATE TABLE GAME_CONTENT (
	GAME_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_NO INT(10),
    GAME_TITLE VARCHAR(50),
    GAME_TARGET_LEVEL INT(10),
    GAME_PRICE INT(100),
    GAME_DISCOUNT_PRICE INT(100),
    GAME_CONTENT VARCHAR(4000),
    GAME_FILE_NAME VARCHAR(100),
    GAME_FILE_PATH VARCHAR(200),
    GAME_DEL_CHECK INT(10),
    GAME_SUB_REGDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    GAME_SUB_ENDDATE DATE,
    GAME_REGDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    GAME_ENDDATE DATE,
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO)
);

CREATE TABLE GAME_PURCHASE (
	GAME_NO INT(10),
    USER_NO INT(10),
    PURCHASE_TYPE INT(10),
    PURCHASE_DATE DATE,
	FOREIGN KEY (GAME_NO) REFERENCES GAME_CONTENT (GAME_NO),
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO)
);

CREATE TABLE BOARD(
	BOARD_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_NO INT(10),
    BOARD_TYPE INT(30),
    BOARD_CATEGORY INT(30),
    BOARD_NOTICE INT(30),
    BOARD_TITLE VARCHAR(500),
    BOARD_CONTENT VARCHAR(3000),
    BOARD_REGDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    BOARD_ENDDATE DATE,
    BOARD_HITS INT(10),
    BOARD_FILE_NAME VARCHAR(100),
    BOARD_FILE_PATH VARCHAR(200),
    BOARD_REPLY_NO VARCHAR(10),
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO)
);

CREATE TABLE COMMENT(
	COMMENT_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    BOARD_NO INT(10),
    USER_NO INT(10),
    COMMENT_REGDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    COMMENT_ENDDATE DATE,
    COMMENT_CONTENT VARCHAR(2000),
    FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO),
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO)
);

CREATE TABLE HOMEWORK (
	HOMEWORK_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_NO INT(10),
    HOMEWORK_NAME VARCHAR(100),
    HOMEWORK_CONTENT VARCHAR(4000),
    HOMEWORK_LEVEL INT(10),
    HOMEWORK_DUEDATE DATE,
    HOMEWORK_REGDATE DATE,
    HOMEWORK_MODIDATE DATE,
    SG_NO INT(10),
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO),
    FOREIGN KEY (SG_NO) REFERENCES STUDY_GROUP (SG_NO)
);

CREATE TABLE STUDY_GROUP (
	SG_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_NO INT(10),
    GAME_NO INT(10),
    SG_NAME VARCHAR(30),
    SG_REGDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	SG_ENDDATE DATE,
	SG_CAPA INT(10),
    SG_LEVEL INT(10),
    SG_PLUS VARCHAR(4000),
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO),
    FOREIGN KEY (GAME_NO) REFERENCES GAME_CONTENT (GAME_NO)
);

CREATE TABLE STUDY_GROUP_JOIN(
	SG_NO INT(10),
    USER_NO INT(10),
    SGJ_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SGJ_AUTHDATE DATE,
    SGJ_AUTH INT(10),
    SGJ_TARGET_LEVEL INT(10),
    SGJ_TARGET_DATE DATE,
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO),
    FOREIGN KEY (SG_NO) REFERENCES STUDY_GROUP (SG_NO)
);

CREATE TABLE HOMEWORK_HISTORY (
	HOMEWORK_NO INT(10),
    USER_NO INT(10),
    TEACH_ASSIGNDATE DATE,
    STU_CONTENT VARCHAR(4000),
    STU_Q VARCHAR(4000),
    STU_DUEDATE DATE,
    TEACH_ANSWER VARCHAR(4000),
    TEACH_GRADE INT(10),
    TEACH_GRADEDATE DATE,
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO),
    FOREIGN KEY (HOMEWORK_NO) REFERENCES HOMEWORK (HOMEWORK_NO)
);

CREATE TABLE DOCUMENT (
	DOCU_NO INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_NO INT(10),
    DOCU_TYPE INT(1),
    DOCU_CATEGORY INT(1),
    DOCU_SERVICE INT(1),
    DOCU_TITLE VARCHAR(200),
    DOCU_CONTENT VARCHAR(4000),
    DOCU_REGDATE DATE,
    DOCU_PATH VARCHAR(100),
    DOCU_FILE_NAME VARCHAR(100),
    DOCU_FILE_PATH VARCHAR(100),
    FOREIGN KEY (USER_NO) REFERENCES USER (USER_NO)
);


CREATE TABLE UPLOAD (
  FILE_NO INT PRIMARY KEY auto_increment,
  FILENAME varchar(1000), ##실제파일명
  FILEPATH varchar(1000), ##폴더명
  UUID varchar(1000), ##UUID명，
  GAME_NO INT,
  GAME_TITLE varchar(1000)##FK
);

select c.*, g.game_price 
from CART c 
left join GAME_CONTENT g 
on g.GAME_NO = c.GAME_NO
where c.user_no = 37;
